# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  unit_tests:
    docker:
      # specify the version you desire here
      - image: circleci/python:3.6.1

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest

  run_scraper:
    docker:
      # specify the version you desire here
      - image: circleci/python:3.6.1

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run scraper
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            cd src/bandcamp_merch_availability
            rm -f bandcamp_merch.jl
            scrapy crawl bandcamp_merch -o bandcamp_merch.jl
            cat bandcamp_merch.jl


workflows:
  version: 2

  unit_tests:
    jobs:
      - unit_tests:
          filters:
            branches:
              only: master

  scrape_daily:
    # triggers:
    #   - schedule:
    #       cron: "0 7 * * *"
            # filters:
            #   branches:
            #     only:
            #       - master
    jobs:
      - run_scraper
